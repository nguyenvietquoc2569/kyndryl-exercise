def distributedTasks = [:]
def version = '12.8.0'
def projects = [:]
def raw
def baseSha = 'last-success-build'
def target = 'origin/main'
def configProjects = ['dnsserver', 'dns-us', 'haproxy', 'heimdallr']

stage("Build") {
  jsTask {
    // cleanWs()
    withCredentials([usernamePassword(credentialsId: "jenkins-new-beta", usernameVariable: "gitUsername", passwordVariable: "gitPassword")]){
      withCredentials([usernamePassword(credentialsId: "dockerhub", usernameVariable: "dockerUsername", passwordVariable: "dockerPassword")]){
        checkout scm
        sh script: "git pull https://${gitUsername}:${gitPassword}@github.com/nguyenvietquoc2569/kyndryl-exercise.git --tags"
        
        sh 'yarn install'
        sh 'rm -rf .cache'

        raw = sh(script: "npx nx print-affected --base=${baseSha} --target=${target}", returnStdout: true)
        projects = readJSON(text: raw)['projects']
        sh "echo ${projects}"
        projects.eachWithIndex { project, i ->
          if (fileExists("apps/${project}/Dockerfile")) {
            if (!(configProjects.contains(project))) {
              sh "npx nx run ${project}:build --prod"
            }
            docker.build("nguyenvietquoc2569/kyndryl-exercise-${project}:${version}", ". -f apps/${project}/Dockerfile")
            sh "docker login -u ${dockerUsername} -p ${dockerPassword}"
            sh "docker push nguyenvietquoc2569/kyndryl-exercise-${project}:${version}"
          }
        }
        sh script: "git checkout origin/main"
        sh script: "git tag -f last-success-build"
        sh script: "git push https://${gitUsername}:${gitPassword}@github.com/nguyenvietquoc2569/kyndryl-exercise.git --tags --force"
      }
    }
    // sh 'npx nx run api:build --prod'
    // sh 'npx nx run betaschool:build --prod'
  }
}

def jsTask(Closure cl) {
  node {
    withEnv(["HOME=${workspace}"]) {
      docker.image('node:14').inside('--tmpfs /.config', cl)
    }
  }
}